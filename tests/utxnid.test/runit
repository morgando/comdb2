#!/usr/bin/env bash
bash -n "$0" | exit 1
source ${TESTSROOTDIR}/tools/cluster_utils.sh
a_dbn=$1

#####################################################

NUM_INVALID_IDS=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default 'select COUNT(*) from comdb2_transaction_logs AS a, comdb2_transaction_logs AS b WHERE (a.txnid > 0) and (a.utxnid!=b.utxnid and a.txnid==b.txnid) or (a.utxnid==b.utxnid and a.txnid!=b.txnid)')
NUM_INVALID_IDS=$(echo $NUM_INVALID_IDS | grep -oP "[0-9]+\)$")
NUM_INVALID_IDS=${NUM_INVALID_IDS:0:-1}
echo ${NUM_INVALID_IDS}

if [[ $NUM_INVALID_IDS -ne 0 ]]; then
	exit 1
fi

cdb2sql ${CDB2_OPTIONS} $a_dbn default 'exec procedure sys.cmd.send("bdb checkpoint")'

sleep 1

res=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default 'select timestamp, MAX(maxutxnid) from comdb2_transaction_logs where rectype==11')
CKP_TIME=$(echo $res | grep -oP "\=(.*?)\,")
CKP_TIME=${CKP_TIME:1:-1}
CKP_MAX_UTXNID=$(echo $res | grep -oP "[0-9]+\)$")
CKP_MAX_UTXNID=${CKP_MAX_UTXNID:0:-1}

echo ${CKP_TIME}
echo ${CKP_MAX_UTXNID}

bounce_cluster

sleep 1

cdb2sql ${CDB2_OPTIONS} $a_dbn default - <<EOF
create table t(i int);$$
insert into t values(1);
EOF

echo "select COUNT(*) from comdb2_transaction_logs where timestamp > "$CKP_TIME" and utxnid < "$CKP_MAX_UTXNID""
NUM_INVALID_IDS=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default "select COUNT(*) from comdb2_transaction_logs where timestamp > "$CKP_TIME" and utxnid < "$CKP_MAX_UTXNID"")
NUM_INVALID_IDS=$(echo $NUM_INVALID_IDS | grep -oP "[0-9]+\)$")
NUM_INVALID_IDS=${NUM_INVALID_IDS:0:-1}

if [[ $NUM_INVALID_IDS -ne 0 ]]; then
	exit 1
fi

