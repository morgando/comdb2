#!/usr/bin/env bash
bash -n "$0" | exit 1
source ${TESTSROOTDIR}/tools/cluster_utils.sh
a_dbn=$1
ckp_rectype=2011

#####################################################

function failif
{
	if [[ $1 -ne 0 ]]; then
		exit 1
	fi
}

function insert_values
{
	for (( i=0; i<$1; i++))
	do
		cdb2sql ${CDB2_OPTIONS} $a_dbn default "insert into "$2" values(1)"
	done
}

# Setup

cdb2sql ${CDB2_OPTIONS} $a_dbn default 'create table t(i int)'
insert_values 100 t

# Validate transaction IDs

NUM_DUPLICATE_UTXNIDS=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default 'select COUNT(*) from comdb2_transaction_logs AS a, comdb2_transaction_logs AS b WHERE (a.txnid>0) and (a.utxnid!=b.utxnid and a.txnid=b.txnid) or (a.utxnid=b.utxnid and a.txnid!=b.txnid)')
failif $?
NUM_DUPLICATE_UTXNIDS=$(echo $NUM_DUPLICATE_UTXNIDS | grep -oP "[0-9]+\)$")
NUM_DUPLICATE_UTXNIDS=${NUM_DUPLICATE_UTXNIDS:0:-1}

NUM_TXNS_WITHOUT_UTXNID=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default 'select COUNT(*) from comdb2_transaction_logs WHERE txnid>0 and utxnid=0')
failif $?
NUM_TXNS_WITHOUT_UTXNID=$(echo $NUM_TXNS_WITHOUT_UTXNID | grep -oP "[0-9]+\)$")
NUM_TXNS_WITHOUT_UTXNID=${NUM_TXNS_WITHOUT_UTXNID:0:-1}
failif $NUM_DUPLICATE_UTXNIDS
failif $NUM_TXNS_WITHOUT_UTXNID

# Send checkpoint, get max utxnid at time of checkpoint, and then bounce cluster.

cdb2sql ${CDB2_OPTIONS} $a_dbn default 'exec procedure sys.cmd.send("bdb checkpoint")'
sleep 1

res=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default "select timestamp, MAX(maxutxnid) from comdb2_transaction_logs where rectype=="$ckp_rectype"")
failif $?
CKP_TIME=$(echo $res | grep -oP "\=(.*?)\,")
CKP_TIME=${CKP_TIME:1:-1}
CKP_MAX_UTXNID=$(echo $res | grep -oP "[0-9]+\)$")
CKP_MAX_UTXNID=${CKP_MAX_UTXNID:0:-1}

bounce_cluster
sleep 1

# Run transactions

insert_values 100 t

# Validate transaction IDs: Make sure that transactions after checkpoint have utxnids greater than the max utxnid at checkpoint.

NUM_INVALID_IDS=$(cdb2sql ${CDB2_OPTIONS} $a_dbn default "select COUNT(*) from comdb2_transaction_logs where timestamp>"$CKP_TIME" and utxnid<"$CKP_MAX_UTXNID"")
failif $?
NUM_INVALID_IDS=$(echo $NUM_INVALID_IDS | grep -oP "[0-9]+\)$")
NUM_INVALID_IDS=${NUM_INVALID_IDS:0:-1}
failif $NUM_INVALID_IDS
